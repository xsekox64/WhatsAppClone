// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WhatsAppClone.Models;

public partial class EkikWhatsappContext : DbContext
{
    public EkikWhatsappContext(DbContextOptions<EkikWhatsappContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Chat> Chats { get; set; }

    public virtual DbSet<ChatParticipant> ChatParticipants { get; set; }

    public virtual DbSet<Group> Groups { get; set; }

    public virtual DbSet<GroupInvite> GroupInvites { get; set; }

    public virtual DbSet<GroupMember> GroupMembers { get; set; }

    public virtual DbSet<GroupMessage> GroupMessages { get; set; }

    public virtual DbSet<GroupMessageStatus> GroupMessageStatuses { get; set; }

    public virtual DbSet<Message> Messages { get; set; }

    public virtual DbSet<MessageStatus> MessageStatuses { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<User> Users { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Chat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Chats__3214EC07CD147BBC");

            entity.HasIndex(e => e.Id, "idx_chats_lastMessage");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.GroupImage).HasMaxLength(255);
            entity.Property(e => e.GroupName).HasMaxLength(255);
            entity.Property(e => e.IsGroup).HasDefaultValue(false);
        });

        modelBuilder.Entity<ChatParticipant>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ChatPart__3214EC07F6788AD1");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");

            entity.HasOne(d => d.Chat).WithMany(p => p.ChatParticipants)
                .HasForeignKey(d => d.ChatId)
                .HasConstraintName("FK__ChatParti__ChatI__30F848ED");

            entity.HasOne(d => d.User).WithMany(p => p.ChatParticipants)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__ChatParti__UserI__31EC6D26");
        });

        modelBuilder.Entity<Group>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Groups__3214EC0761B7B088");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.CreatedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.GroupImage).HasMaxLength(255);
            entity.Property(e => e.GroupName)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.CreatedByNavigation).WithMany(p => p.Groups)
                .HasForeignKey(d => d.CreatedBy)
                .HasConstraintName("FK__Groups__CreatedB__49C3F6B7");
        });

        modelBuilder.Entity<GroupInvite>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupInv__3214EC071B7FB466");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.SentAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasDefaultValue("pending");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupInvites)
                .HasForeignKey(d => d.GroupId)
                .HasConstraintName("FK__GroupInvi__Group__3C34F16F");

            entity.HasOne(d => d.Invitee).WithMany(p => p.GroupInviteInvitees)
                .HasForeignKey(d => d.InviteeId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupInvi__Invit__3E1D39E1");

            entity.HasOne(d => d.Inviter).WithMany(p => p.GroupInviteInviters)
                .HasForeignKey(d => d.InviterId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupInvi__Invit__3D2915A8");
        });

        modelBuilder.Entity<GroupMember>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupMem__3214EC0774A56918");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.IsAdmin).HasDefaultValue(false);
            entity.Property(e => e.JoinedAt)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupMembers)
                .HasForeignKey(d => d.GroupId)
                .HasConstraintName("FK__GroupMemb__Group__6A30C649");

            entity.HasOne(d => d.User).WithMany(p => p.GroupMembers)
                .HasForeignKey(d => d.UserId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupMemb__UserI__6B24EA82");
        });

        modelBuilder.Entity<GroupMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupMes__3214EC07FA1EFC82");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.MediaUrl).HasMaxLength(255);
            entity.Property(e => e.MessageType)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Group).WithMany(p => p.GroupMessages)
                .HasForeignKey(d => d.GroupId)
                .HasConstraintName("FK__GroupMess__Group__114A936A");

            entity.HasOne(d => d.Sender).WithMany(p => p.GroupMessages)
                .HasForeignKey(d => d.SenderId)
                .HasConstraintName("FK__GroupMess__Sende__123EB7A3");
        });

        modelBuilder.Entity<GroupMessageStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GroupMes__3214EC0780D9676E");

            entity.ToTable("GroupMessageStatus");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Message).WithMany(p => p.GroupMessageStatuses)
                .HasForeignKey(d => d.MessageId)
                .HasConstraintName("FK__GroupMess__Messa__2CF2ADDF");

            entity.HasOne(d => d.Receiver).WithMany(p => p.GroupMessageStatuses)
                .HasForeignKey(d => d.ReceiverId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__GroupMess__Recei__2DE6D218");
        });

        modelBuilder.Entity<Message>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Messages__3214EC072DDD45BE");

            entity.HasIndex(e => e.ChatId, "idx_messages_chatId");

            entity.HasIndex(e => e.SenderId, "idx_messages_senderId");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.MediaUrl).HasMaxLength(255);
            entity.Property(e => e.MessageType)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Chat).WithMany(p => p.Messages)
                .HasForeignKey(d => d.ChatId)
                .HasConstraintName("FK__Messages__ChatId__37A5467C");

            entity.HasOne(d => d.Sender).WithMany(p => p.Messages)
                .HasForeignKey(d => d.SenderId)
                .HasConstraintName("FK__Messages__Sender__38996AB5");
        });

        modelBuilder.Entity<MessageStatus>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MessageS__3214EC0788249501");

            entity.ToTable("MessageStatus");

            entity.HasIndex(e => e.ReceiverId, "idx_messageStatus_receiver");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Status)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");

            entity.HasOne(d => d.Message).WithMany(p => p.MessageStatuses)
                .HasForeignKey(d => d.MessageId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MessageSt__Messa__43D61337");

            entity.HasOne(d => d.Receiver).WithMany(p => p.MessageStatuses)
                .HasForeignKey(d => d.ReceiverId)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK__MessageSt__Recei__44CA3770");
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Notifica__3214EC07D8657792");

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.IsRead).HasDefaultValue(false);
            entity.Property(e => e.Message).IsRequired();
            entity.Property(e => e.Timestamp)
                .HasDefaultValueSql("(getdate())")
                .HasColumnType("datetime");
            entity.Property(e => e.Title)
                .IsRequired()
                .HasMaxLength(255);

            entity.HasOne(d => d.User).WithMany(p => p.Notifications)
                .HasForeignKey(d => d.UserId)
                .HasConstraintName("FK__Notificat__UserI__44FF419A");
        });

        modelBuilder.Entity<User>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__Users__3214EC07F5380419");

            entity.HasIndex(e => e.PhoneNumber, "UQ__Users__85FB4E3829AA7F9B").IsUnique();

            entity.HasIndex(e => e.SicilNo, "UQ__Users__B736D3C2A89DA761").IsUnique();

            entity.HasIndex(e => e.Tcno, "UQ__Users__B770B774439C38D6").IsUnique();

            entity.Property(e => e.Id).HasDefaultValueSql("(newid())");
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.IsOnline).HasDefaultValue(false);
            entity.Property(e => e.LastSeen).HasColumnType("datetime");
            entity.Property(e => e.Name)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.PhoneNumber)
                .IsRequired()
                .HasMaxLength(15);
            entity.Property(e => e.ProfileImage).HasMaxLength(255);
            entity.Property(e => e.RefreshTokenExpires).HasColumnType("datetime");
            entity.Property(e => e.SicilNo)
                .IsRequired()
                .HasMaxLength(50);
            entity.Property(e => e.Status).HasMaxLength(255);
            entity.Property(e => e.SurName)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.Tcno)
                .IsRequired()
                .HasMaxLength(11)
                .HasColumnName("TCNO");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}